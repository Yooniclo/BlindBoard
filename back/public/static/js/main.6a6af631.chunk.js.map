{"version":3,"sources":["emotion/BlindBoard.js","BlindBoard.tsx","components/BlindBoardRead.tsx","index.tsx"],"names":["media","map","bp","Board","css","ButtonSet","BlindBoard","listMax","history","useState","list","setList","useEffect","a","fetch","response","json","filter","v","i","GetList","id","key","data-id","to","title","length","substr","author","time","now","Date","reg_time","diff","getTime","days","Math","floor","hours","TimeToString","className","defaultProps","BlindBoardRead","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"0LAEA,IAEMA,EAFc,CAAC,IAAK,KAEAC,KAAK,SAAAC,GAAE,mCAA0BA,EAA1B,UAE3BC,EAAQC,YAAH,mBAEL,CAACJ,EAAM,IAFF,8BAML,CAACA,EAAM,IANF,6CAWG,CAACA,EAAM,IAXV,iBAYG,CAACA,EAAM,IAZV,goBAuDLK,EAAS,mV,OC9BTC,EAAa,SAAC,EAAD,GAA0C,IAAxCC,EAAuC,EAAvCA,QAAuC,KAAlBC,QAEbC,mBAAS,KAFsB,mBAErDC,EAFqD,KAE/CC,EAF+C,KAI1DC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,uBADf,cACRC,EADQ,gBAEGA,EAASC,OAFZ,OAEVA,EAFU,OAGdL,EAAQK,EAAKC,QAAO,SAACC,EAAqBC,GAAtB,OAAoCA,EAAIZ,MAH9C,2CAAH,qDAKba,MAOF,OACE,mBAAKC,GAAG,aAAajB,IAAKD,GACxB,mBAAKkB,GAAG,eACN,wFAEF,mBAAKA,GAAG,SACLX,EAAKT,KAAI,SAACiB,EAAQC,GAAT,OACR,kBAAIG,IAAKJ,EAAEG,GAAIE,UAASL,EAAEG,IACxB,YAAC,IAAD,CAAMG,GAAE,gBAAWN,EAAEG,KACnB,sBAAKH,EAAEO,MAAMC,OAAS,GAAKR,EAAEO,MAAME,OAAO,EAAG,IAAM,MAAQT,EAAEO,OAC7D,sBAAKP,EAAEU,QACP,sBAnDO,SAACC,GACpB,IAAMC,EAAY,IAAIC,KAChBC,EAAiB,IAAID,KAAKF,GAG5BI,EAAOH,EAAII,UAAYF,EAASE,UAChCC,EAAOC,KAAKC,MAAOJ,EAAI,OACvBK,EAAQF,KAAKC,MAAOJ,EAAI,MAAL,MAWvB,OARGE,EAAO,EACCA,EAAO,eACTG,EAAQ,GAAc,IAATH,EACXG,EAAQ,qBAER,qBAoCMC,CAAarB,EAAEW,aAK5B,mBAAKR,GAAG,eACN,mBAAKjB,IAAKC,GACR,oBAAMmC,UAAU,kBAAhB,gBACA,oBAAMA,UAAU,kBAAhB,QACA,oBAAMA,UAAU,kBAAhB,qBAQVlC,EAAWmC,aAAe,CACxBlC,QAAS,IAGID,Q,OCnEAoC,EAXQ,WAErB,OACE,8BCCJC,IAASC,OACP,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWzC,IACnC,YAAC,IAAD,CAAOwC,KAAM,QAASC,UAAWL,MAGpCM,SAASC,eAAe,W","file":"static/js/main.6a6af631.chunk.js","sourcesContent":["import { css } from '@emotion/core'\r\n\r\nconst breakpoints = [320, 568]\r\n\r\nconst media = breakpoints.map( bp => `@media (min-width: ${bp}px)` )\r\n\r\nconst Board = css`\r\n    min-width: 320px;\r\n    ${[media[0]]} { \r\n        width: 90%;\r\n        font-size: 11px;\r\n    }\r\n    ${[media[1]]} { \r\n        width: 568px;\r\n        font-size: 14px; \r\n    }\r\n        #BoardHeader{\r\n            ${[media[0]]} { height: 56px; }\r\n            ${[media[1]]} { height: 86px; }\r\n            padding: 10px;\r\n            box-sizing: border-box;\r\n            h1 {\r\n                text-align: center;\r\n            }\r\n        }\r\n        #Board{\r\n            height: 700px;\r\n            box-shadow: 0 0 10px #dbdbdb;\r\n            border-radius: 10px;\r\n            box-sizing: border-box;\r\n            ul { \r\n                width: 100%; \r\n                :nth-of-type(even) { background-color: #f5f5f5; }\r\n                cursor: pointer;\r\n                &:hover {\r\n                    background-color: #dbdbdb;\r\n                }\r\n            }\r\n            ul > li {\r\n                display: inline-block;\r\n                height: 50px;\r\n                line-height: 48px;\r\n                text-align: center;\r\n                :nth-of-type(1) { width: 60%; }\r\n                :nth-of-type(2) { width: 25%; }\r\n                :nth-of-type(3) { width: 15%; }\r\n            }\r\n            textarea{\r\n                width: 100%;\r\n                box-sizing: border-box;\r\n            }\r\n        }\r\n        #BoardFooter{\r\n            display: flex;\r\n            justify-content: center;\r\n            .material-icons.md-18 { font-size: 18px; }\r\n            .material-icons.md-36 { font-size: 36px; }\r\n            .material-icons.md-48 { font-size: 48px; }\r\n        }\r\n`\r\n\r\nconst ButtonSet = css`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    height: 36px;\r\n    border: 1px solid #dbdbdb;\r\n    border-radius: 5px;\r\n    span {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: 36px;\r\n        height: 36px;\r\n        :first-of-type{ border-right: 1px solid #dbdbdb; }\r\n        :last-of-type{ border-left: 1px solid #dbdbdb; }\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: #dbdbdb;\r\n        }\r\n    }\r\n`\r\n\r\nexport {\r\n    Board,\r\n    ButtonSet\r\n}","import React, { useState, useEffect } from 'react'\nimport { Board, ButtonSet } from './emotion/BlindBoard'\nimport { Link } from 'react-router-dom'\n \ninterface BoardRow {\n  listMax: number\n}\n\nconst TimeToString = (time: string) => {\n  const now: Date = new Date()\n  const reg_time: Date = new Date(time)\n  let string\n\n  let diff = now.getTime() - reg_time.getTime()\n  let days = Math.floor((diff / (1000 * 60 * 60 * 24)))\n  let hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  //let minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n  //let seconds = Math.floor((diff % (1000 * 60)) / (1000))\n  if(days > 0){\n    string = days + '일전'\n  }else if(hours > 1 && days === 0){\n    string = hours + '시간전'\n  }else{\n    string = '방금전'\n  }\n\n  return string\n}\n\nconst PORT = process.env.NODE_ENV === 'development'? 3000 : 80\n\nconst BlindBoard = ({listMax}: BoardRow, {history}: any) => { \n\n  let [list, setList]: any = useState([])  \n\n  useEffect(() => { \n    const GetList = async () => {\n      const response = await fetch('http://localhost:' + PORT)\n      let json = await response.json()\n      setList(json.filter((v: string | number , i: number) => i < listMax))\n    }\n    GetList()\n  })\n  \n  const GetContent = (e: React.MouseEvent<HTMLUListElement>) => {\n    console.log(e.currentTarget.dataset.id)\n  }\n\n  return (  \n    <div id=\"BlindBoard\" css={Board}>\n      <div id=\"BoardHeader\">\n        <h1>익명의 사내게시판📄</h1>\n      </div>\n      <div id=\"Board\">\n        {list.map((v: any, i:any) => (\n          <ul key={v.id} data-id={v.id}>\n            <Link to={`/read/${v.id}`}>\n              <li>{v.title.length > 26 ? v.title.substr(0, 20) + '...' : v.title}</li>\n              <li>{v.author}</li>\n              <li>{TimeToString(v.time)}</li>\n            </Link>\n          </ul>\n        ))}\n      </div>\n      <div id=\"BoardFooter\">\n        <div css={ButtonSet}>\n          <span className=\"material-icons\">chevron_left</span>\n          <span className=\"material-icons\">edit</span>\n          <span className=\"material-icons\">chevron_right</span>\n        </div>\n      </div>\n    </div>\n  )\n  \n}\n\nBlindBoard.defaultProps = {\n  listMax: 10\n}\n\nexport default BlindBoard","import React from 'react'\r\n\r\nconst BlindBoardRead = () => { \r\n    \r\n  return (  \r\n    <div>\r\n        hi\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\nexport default BlindBoardRead","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport BlindBoard from './BlindBoard'\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport BlindBoardRead from './components/BlindBoardRead'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route exact path={\"/\"} component={BlindBoard} />\n      <Route path={\"/read\"} component={BlindBoardRead} />\n    </Switch>\n  </BrowserRouter>\n  ,document.getElementById('root')\n)"],"sourceRoot":""}